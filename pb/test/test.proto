syntax = "proto2";

enum Enum {
  one = 1;
  two = 2;
}

message Small  {
  optional string small_s = 100;
  optional int64 small_i  = 200;
}


message TwoString  {
  required string two_s = 1000;
  required string two_b = 2000;
}

message Comprehensive {
  repeated uint32   repeated_uint32   = 1;
  required int32    required_int32    = 2;
  required Small    required_Small    = 3;
  required double   required_double   = 4;
  optional sfixed32 optional_sfixed32 = 5;
  optional fixed32  optional_fixed32  = 6;
  repeated bytes    repeated_bytes    = 7;
  repeated bool     repeated_bool     = 8;
  repeated sfixed64 repeated_sfixed64 = 9;
  optional bool     optional_bool     = 10;
  required uint32   required_uint32   = 11;
  optional double   optional_double   = 12;
  required int64    required_int64    = 13;
  required uint64   required_uint64   = 14;
  required string   required_string   = 15;
  required string    required_bytes    = 16;
  optional bytes    optional_bytes    = 17;
  optional sint64   optional_sint64   = 18;
  repeated sint64   repeated_sint64   = 19;
  repeated fixed32  repeated_fixed32  = 20;
  optional Small    optional_Small    = 21;
  optional int32    optional_int32    = 22;
  optional fixed64  optional_fixed64  = 23;
  optional Enum     optional_enum     = 24;
  required float    required_float    = 25;
  optional sfixed64 optional_sfixed64 = 26;
  required sfixed32 required_sfixed32 = 27;
  required bool     required_bool     = 28;
  repeated fixed64  repeated_fixed64  = 29;
  optional sint32   optional_sint32   = 30;
  repeated int64    repeated_int64    = 31;
  required fixed64  required_fixed64  = 32;
  repeated Enum     repeated_enum     = 33;
  optional int64    optional_int64    = 34;
  repeated float    repeated_float    = 35;
  repeated sint32   repeated_sint32   = 36;
  repeated uint64   repeated_uint64   = 37;
  repeated Small    repeated_Small    = 38;
  repeated double   repeated_double   = 39;
  repeated string   repeated_string   = 40;
  required sfixed64 required_sfixed64 = 41;
  required sint64   required_sint64   = 42;
  optional string   optional_string   = 43;
  optional uint32   optional_uint32   = 44;
  repeated sfixed32 repeated_sfixed32 = 45;
  optional float    optional_float    = 46;
  optional uint64   optional_uint64   = 47;
  required Enum     required_enum     = 48;
  required sint32   required_sint32   = 49;
  required fixed32  required_fixed32  = 50;
  repeated int32    repeated_int32    = 51;
}
